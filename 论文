南京大学本科生毕业论文（设计、作品）中文摘要
题目：ZigBee通信协议的研究及优化
院系：电子科学与工程学院
专业：通信工程
本科生姓名：孙若昀
指导教师（姓名、职称）：张志俭 高级工程师
摘要：
随着无线通信技术的日益成熟，物联网技术渐渐成为无线局域网技术中热门的方向，应用领域也渐渐扩展到交通、安防物流、零售、电力、金融、环保、医疗等生产生活的方方面面。
本文首先介绍了应用于教室环境下的智能管理系统设计，此设计基于ZigBee通信协议及TI的Z-Stack协议栈，采用CC3530芯片，对教室内的温度、人数等参数信息进行实时监测，并智能化的对数据进行处理和操作，如开启空调或关闭灯光。
因为教室这一特定环境作为局域网来说数量多、距离近，各个教室内的网络如何克服互相之间的干扰、串扰是急需解决的问题。同时，作为应用产品，安装和维护上的便捷高效是需要追求的目标，对此，本文提出一系列方案并分析了其优缺点，对Z-Stack协议栈中关于PANID冲突机制进行了优化，以达到适应教室环境下防止串扰的目的。








关键词：ZigBee；Z-Stack；串扰；协议优化
南京大学本科生毕业论文（设计、作品）英文摘要
THESIS: ZigBee communication protocol research and optimization                                      
DEPARTMENT: Electronic Science and Engineering
SPECIALIZATION: communication engineering
UNDERGRADUATE: Ruoyun Sun
MENTOR: Zhijian Zhang, senior engineer
ABSTRACT: 
   With the mature of wireless communication technology, The Internet of Things technology become increasingly popular in the wireless LAN technology direction and the application of IoT also gradually expand to the field such as Transport, security, logistics, retail, power, finance, environmental protection, medical care, etc .
   This article first introduces the design of the intelligent management system under the classroom environment, this design is based on ZigBee communication protocol and Z -Stack protocol Stack, using CC3530 chip. In this system, parameters such as temperature and the number of classroom information are real-time monitored, and processing and operation will be auto based on collected data, such as open air conditioning or close the lights.
   Because of the classroom as a specified environment, local area network (LAN) has some feature such as quantity, and closer. each  How to overcome the interference and crosstalk between each classroom network and others is urgently problem which need to be solved. At the same time, as the application products, installation and maintenance of efficient is the goal we pursued. Therefore, this paper puts forward a series of schemes and analyzes their advantages and disadvantages, the Z - Stack protocol Stack on PANID conflict mechanism is optimized, in order to achieve the purpose to prevent crosstalk under the environment of the classroom.



KEY WORDS: ZigBee; Z-Stack; crosstalk; Protocol Optimization
 
目  录
摘要	I
Abstract	Ⅱ
第1章 绪论.	1
1.1 选题背景	1
1.2 技术发展现状	1
1.3 创新点和技术路线	1
1.4 本章小结	1
第2章 ZigBee协议概述	1
2.1 ZigBee技术	1
2.1.1 ZigBee技术特点	1
2.1.2 ZigBee协议组网方式	1
2.2 Z-Stack协议栈概述	1
2.2.1 Z-Stack结构	1
2.2.2 OSAL操作系统	1
2.3 本章小结	1
第3章 智能教室系统设计	1
3.1 智能教室系统功能介绍	1
3.2 智能教室系统设计方案	1
3.2.1 智能教室系统结构.......................................1
3.2.2 选择这样结构的原因.....................................1
3.2.3 智能教室系统实现方法...................................1
3.4 本章小结	1
第4章 对串扰问题的研究	1
4.1 Z-Stack协议中的网络标识符及其冲突机制	1
4.1.1 网络标识符PAN ID ......................................1
4.1.2 Z-Stack中的非易失性存储................................1
4.1.3 网络标识符冲突检测 ....................................1
4.1.4 Z-Stack如何解决冲突 ...................................1
4.2 在顶层开发中寻求解决	1
4.2.1 安装过程中修改PANID	1
4.2.2 ExtendPANID	1
4.3 对协议进行优化	1
结论	1
致谢	1
参考文献	1

 
第1章 绪论.
1.1 选题背景
随着高校年年扩大招生，学生人数随之不断的增加，高校管理变革的逐步推进，校内教学方式随之不断创新，涌现了类似慕课、翻转课堂等课下自主学习网络课程，为学生提供了更多的个性化服务，学生可以根据自己的兴趣爱好进行课程的选择，自主安排时间，获得更舒适的学习体验。这些新的变化同时加剧了对自习空间的需求，在高校内，典型的自习场所就是图书馆和教室。
    根据调研，我校自习场所普遍面临着3个问题。其一是资源的浪费，在自习的淡季，有些教室往往开着灯开着空调一整天而无人光顾，其中造成的能源浪费实在是有些可惜。其二是自习空间资源不明朗，当进入期末复习阶段后，自习教室往往人数激增，此时学生最想要的就是一份标明那些教室有空位的名单了，一个公开的自习教室人数情况可以大大减少在“找教室”上的时间花费。其三是环境的调节管理粗放和僵化，随着高校设施与环境的不断完善，空调成为图书馆和教室必备的基础设备，但是南京的天气波动频繁，往往前一天觉得舒适的空调在下一天就显得过冷，既浪费了能源也造成了学生的不适。
    以上这些问题都使得学生的自习体验不够舒适，而高校也并没有多余的人力来完善自习环境，所以高校自习空间的管理迫切的需要用计算机来进行辅助管理，利用高校网络，建立以专业的教室管理软件为核心的开放平台，实现教室管理的规范化、流程化、信息化，提高教室的使用效率、使用质量、管理水平和服务水平，以完善高校设施，丰富校园生活。
1.2技术发展现状
自从比尔盖茨在1995年《未来之路》一书中首次提及Internet of Things的设想，到2005年，ITU发布了《ITU互联网报告2005：物联网》，综合二者内容，正式提出“物联网”的概念。
    我国对物联网技术的发展十分重视，“新一代宽带移动无线通信网”作为《国家中长期科学和技术发展规划纲要(2006 － 2020 年)》中的一项重大科技专项，它代表了我国信息技术的主要发展方向。 [1]
1.3 创新点和论文结构
本文所设计的系统，相较于一般的系统有一个很大的区别。一般的ZigBee网络的架构中，一片区域内仅有一个协调器，对若干路由节点和终端节点进行通信管理。而在本文所设计的系统中，每一个教室都是一个独立的网络，拥有各自的协调器，各网络之间距离近，一块区域内可能聚集若干个网络，这就要求各网络之间能够相互独立通信，互不干扰。
本文的结构主要分为三个部分，第一部分为第一章绪论，介绍了选题背景和物联网技术的发展现状；第二部分为第二章ZigBee协议概述，介绍了ZigBee技术的主要特点和Z-Stack协议栈的基本信息；第三部分为第三至五章，其中第三张和第四章介绍了本文所设计的智能教室系统，第五章则对此系统中的串扰问题进行了详细的阐述。
1.4 本章小结
物联网技术正处在高速发展的阶段，ZigBee技术则是其中被应用非常广泛的一种。本文基于ZigBee协议设计了一套应用于智能教室的物联网系统，并对其中的串扰问题进行了深入的研究和解决。
 
第2章 ZigBee协议概述
2.1 ZigBee技术
ZigBee是基于IEEE802.15.4标准的低功耗局域网协议。根据国际标准规定，ZigBee技术是一种短距离、低功耗的无线通信技术。ZigBee的名字来源于蜂群的生活沟通方式，蜜蜂发现食物后，就会跳一种上下左右来回抖动的舞蹈来告知伙伴食物的具体位置，舞蹈的形状在英文中可以用单词“zigzag”形容，后来就将ZigBee作为新一代短距离无线通信技术的名称。 [2]
2.1.1 ZigBee技术特点
ZigBee技术具有近距离、低复杂度、自组织、低功耗、低数据速率等特点。目前物联网技术中普遍采用以下几种无线通信技术作为生产管理系统的通信方式：红外（IrDA）、蓝牙（Bluetooth）、Wi-Fi以及ZigBee技术。下表对这些技术的优缺点做了一个比较： [3]
技术标准	Wi-Fi	Bluetooth	IrDA	Zigbee
传输距离	100m	<10m	<10m	<150m
传输速率	1-11Mbit/s	1-2Mbit/s	<16Mbit/s	<250Kbit/s
设备成本	高	较高	低	低
功耗	高	低	低	低
系统复杂度	高	较高	低	低

2.1.2 ZigBee协议组网方式
在一个ZigBee网络中的设备有三个逻辑种类：协调器、路由和终端设备。一个ZigBee网络中包含一个协调器节点以及若干个路由节点和终端设备节点。 [4]还有另外一种分类方式，将Zigbee设备分为全功能设备（FFD）和简化功能设备（RFD），全功能设备指的就是协调器节点，而简化功能设备指的是路由节点和终端设备节点。 [2]
下图为典型ZigBee网络的结构，其中黑色是协调器节点，红色是路由节点，白色是终端设备节点：
 
协调器是一个ZigBee网络的“开始”。他是网络中的第一个设备。协调器节点扫描已经存在的网络的RF环境，选择一个信道和一个网络标识符（也叫PAN ID）然后等待其他设备加入这个网络。路由器具有三个执行功能：一是允许其他设备加入网络；二是将信息进行多跳传输；三是协助其子终端设备互相通信。 [4]终端设备节点不能互相通信，只能依靠路由节点或者协调器节点进行转发。
 ZigBee网络中的通信模式一般有三种：第一种是点对点模式，这种方式需要知道通信对象的64位出厂MAC地址或者加入网络时协调器为其分配的16位网络地址；第二种是广播和组播模式，即对网络内或组内所有设备发送信息，由设备自行判断此信息是否对自己有效；第三种是绑定模式，由节点设备向协调器发起绑定申请，协调器将记录下绑定双方的信息于绑定表中，以后绑定表中一方的消息将由协调器直接发向另一方。
2.2 Z-Stack协议栈概述
2.2.1 Z-Stack结构
Z-Stack协议栈的实现方式依然采用分层的思想，分为物理层（PHY）、介质访问控制层（MAC）、网络层（NWK）和应用层（APL）。
下图为Z-Stack协议栈中文件目录：
 
2.2.2 OSAL操作系统
Z-Stack协议栈包含了ZigBee协议所规定的基本功能，这些功能是以函数的形式实现的，为了便于管理这些函数集，从Z-Stack 2006协议栈开始，协议栈内加入了实时操作系统，称为OSAL（操作系统抽象层，Operating System Abstraction Layer）。 [5]
OSAL是一种支持多任务运行的系统资源分配机制，也是一种基于事件驱动的轮询操作系统。事件驱动是指发生事件后采取相应的事件处理方法，轮询指的是不断查看是否有事件发生。 [5]当有事件发生时，OSAL将调用对应的任务事件处理函数。
2.4 本章小结
本章对于设计系统的通信协议——ZigBee协议及其底层协议的实现方式Z-Stack协议栈做了一个基本的描述，其中说明了Zigbee协议的特点、Z-Stack协议的结构和基本实现方式。


 
第3章 智能教室系统设计
3.1 智能教室系统功能介绍
本设计的功能分为两个方面，其一是针对学生群体，也即用户；其二是针对物业人员，也即管理员。
针对用户，系统的功能有：
1.获取教室的使用情况，是否有课，若没有课教室内有几人，室内温度为多少等；
2.当教室内的温度不舒适时自动开启空调，并随时根据教室的温度调整空调的温度，既避免了资源浪费，又有更好的体感温度；
3.当教室内无人时关闭电器，节约能源；
针对管理员，系统的功能有：
1.第一次为教室安装系统时可对各节点进行命名，便于准确获知各个教室的数据和情况；
2.随时获知各个教室内各节点的工作情况是否正常，进行维护时很容易就能精确定位到是哪一个节点出了问题。
3.2 智能教室系统设计方案
3.2.1 智能教室系统结构
 
由上图可以看出，一个教室内部就是一个由一个协调器和若干个终端设备构成的Zigbee网络。教室内的协调器与网关通过串口连接，在网关处通信的协议将从Zigbee协议转为TCP/IP协议。教室外部（一般为走廊）由网线将各网关接入交换机。于是Zigbee网络中的终端设备采集到的数据将通过这样的网络层次将数据传送至数据库和服务器，并在Web界面或者APP上体现出来。同样的，管理员也可以通过这样的网络结构将命令从客户端发布到Zigbee节点上，进行诸如关灯、开空调等操作。
3.2.2 选择这样结构的原因
在选择系统结构时有三个重要的因素需要考虑：稳定性、操作性和成本。而在优先级方面，我们希望稳定性大于操作性，操作性大于成本。
在教室内选用无线通信方式而不是有线是因为操作性，无线通信很直接的避免了需要每个教室都大规模布线施工的问题；无线通信选择Zigbee而不是Wi-Fi等，是因为2.1.1节提到的Zigbee具有低成本、低功耗、系统复杂度低等优点。
在教室外选择有线则是综合考虑了稳定性、操作性和成本，对于教室外的选择有两种方案：一是一层或多层甚至一栋楼都由Zigbee节点进行通信，即在一大块区域内只有一个协调器，而不是每一个教室内都有一个协调器（如下图 [6]）。这就意味着必然有远离协调器的终端节点不能直接和协调器进行通信（Zigbee通信距离1~75m），而要通过路由节点进行多跳传输。那么在走廊中就需要布置路由节点，由于走廊施工起来比较麻烦，所以对于路由节点的供电最好是采用电线而不是电池，这样一来，就可操作性和成本上来说，走廊上布置电线和布置网线是相差无几的。
 
因此决定系统结构的关键因素就成了稳定性，对于由一个Zigbee网络覆盖一大片区域的情况来说，当一个节点设备加入网络时，它会被分配16位的网络地址。终端设备节点将收到一个单独地址。路由节点将收到一个地址范围。该地址范围将包括该路由节点所有可能的后代节点。因为网络短地址是由16位的数字组成，0XFFFF 作为广播地址系统保留使用，所以一个树形拓扑结构的Zigbee网络允许的所有节点最大数目是65535（2^16-1）。 [7]所以理论上是可以做到很大一片区域都由一个Zigbee网络进行覆盖的，但是相对的，这六万五千多个节点，一千多个教室的数据都将有一个协调器进行处理，并且若是想要精确了解每一个节点的工作情况，需要在安装每一个节点的时候立刻为这个节点手动命名，而一个教室一个协调器的话只需要为网关或者协调器命名即可。
选择一个教室一个协调器的一个更重要的原因是Zigbee网络工作于2.4GHz，属于高频段，这就表示Zigbee信号的穿透力不强，当一个教室关上门的时候教室内的信号在传输至教室外时很容易因为建筑物的阻挡而丢失，这对系统的稳定性是一个很大的威胁。所以综合考量后，本系统选择了如上一节所描述的系统结构。
3.2.3 智能教室系统实现方法
本文的重点在于Zigbee协议的研究与优化，所以本部分重点描述教室内部Zigbee网络的实现方式。
2.1.2节曾提到过Zigbee网络的通信方式，分为点对点模式、广播模式和绑定模式。在本系统中网络工作时，选择了广播模式。原因如下：一是因为一个教室内节点数量不多，广播对于信道的占用并不会很严重；二是协调器的命令是以节点种类为单位的，例如协调器接收到服务器发来的“开灯”命令，那么协调器发送给终端节点的命令自然是给继电器节点的，就算传感器节点同样接收到了协调器广播的“开灯”命令，也可以通过判断IP包中的Cluster ID自行忽略这一命令；三是各种类终端节点的数据不需要相互交流，只需要发给协调器即可，传感器采集到的温度继电器节点是不需要知道的。所以简单的星型拓扑结构和广播模式已经足够应付网络内的通信，减少了软件开发难度。
在本网络中，为了精确获得每一个节点的工作情况，为终端节点增加了一个“心跳”事件（2.2.2节中曾提到过OSAL操作系统是事件驱动的）。终端节点在加入网络后每隔一段时间向协调器发送自己的“心跳”，协调器每次向网关传送完数据后将记录的所有终端设备的状态清零，即认为所有终端节点“死亡”，直到终端节点再次传来自己的“心跳”，将此节点的状态刷新为“存活”。若某一节点因为某些原因（断电、损坏等）脱离了网络，那么在协调器下一次向网关汇报数据时，此节点的状态将为“死亡”。当“死亡”节点重新接入网络中时，正常的做法应该是依旧作为原先的节点，而不是作为一个新的节点重新为其命名。以继电器为例，假设一个教室内安装有6盏灯，教室前部、中部、后部各2个，当第一次安装继电器节点时，将遵循先装前部2个再装中部2个最后装后部2个的原则，协调器将根据这些节点加入网络的顺序为其以1号、2号一直到6号命名。这样，当通过摄像头得知教室只有前排有人时，协调器可以向5号和6号继电器发布“关灯”命令。那么，当5号节点退出网络再重新加入网络时，我们仍然希望它是5号节点而不是7号节点。为此，在节点第一次加入网络时，将会向协调器发送自己的64位出厂MAC地址，这样当此节点重新加入网络后，协调器就能通过MAC地址的对比发现这个节点原先位于5号节点的位置，从而当再次需要对教室后部的5号6号灯进行操作时就不会有歧义。但是这样的做法还有另外一个问题，假如5号节点不是掉电了而是损坏了，需要更换一个新的节点，也即有一个新的MAC地址该怎么办呢？协调器中储存有继电器节点的应有数量和实际数量，当协调器收到新的5号节点（下面称其为7号）发来的消息“我是继电器节点”时，协调器对比继电器节点的应有数量和实际数量，若实际数量大于等于应有数量，则报错“继电器节点已满”；若应有数量小于实际数量，则遍历记录着所有继电器节点状态的结构体数组，如果有某一个节点（这个例子中是5号节点）的状态是“死亡”时，则将7号节点的MAC地址覆盖5号节点的MAC地址，并通过MAC地址的点对点通信，将7号节点的名字改为5号。
 
3.4 本章小结
本章详细介绍了智能教室系统的功能和设计方案，以及为什么选用这样的方案，并对系统的结构和实现过程进行了阐述。针对高校（尤其是我校）自习空间的现状，智能教室系统针对性的进行了功能开发，并对系统的安装、使用和维护方便进行了设计上的考量。 
第4章 对串扰问题的研究
上一章介绍了智能教室管理系统的设计方案，因为种种原因最后选择在每一个教室内设置一个协调器，这样就出现了一般Zigbee网络不会出现的问题——串扰。
对串扰问题的担忧主要分为两种，假设A、B两个相邻的教室，A教室中的协调器暂且同样命名为A，A教室中的终端节点分别为a1和a2，同样的，B教室中的协调器为B，终端节点为b1和b2。第一种对串扰的担忧是当终端节点脱离网络再重新加入网络时会不会加入一个错误的网络？假设b1节点因为某些原因脱离网络，当它再次加入网络时，本应该B网络但是可能加入了A网，这样的担忧我将它称之为终端节点的串扰可能性。第二种对串扰的担忧是当协调器脱离网络再重建网络时发生的，假设A节点因为某些原因脱离网络，此时的a1和a2（被称为孤儿节点）是否会自动寻找另一个协调器加入网络（很大的可能加入B节点）？就算管理员因为发现A出现故障从而关闭了a1和a2，当a1和a2重新启动时是否仍然有可能加入B网络中，这样的担忧我将它称之为网络之间的可能串扰可能性。
是否会出现这样的串扰以及如何解决这样的串扰问题，将是本章，也是本文的重点。
先通过几个实验直观的认识一下串扰。先是终端节点的串扰情况。
实验一如下图，其中A、B为相邻两个教室内的协调器节点（放置于教室中间），a3为一个刚刚烧写进代码的新节点。
 
实验结果如下表，其中A-a1表示A和a1节点之间的信号质量，信号质量的值越大表示信号越好。
实验	门	a3连入的网络	A-a1	B-b1	B-b2	a3连入的网络-a3
第一次	开					
第二次	开					
第三次	开					
第四次	开					
第五次	开					
第六次	关					
第七次	关					
第八次	关					
第九次	关					
第十次	关					
实验二如下图，其中A、B为相对两个教室内的协调器节点（放置于教室中间），a3为一个刚刚烧写进代码的新节点。
 
实验结果如下表，其中A-a1表示A和a1节点之间的信号质量，信号质量的值越大表示信号越好。
实验	门	a3连入的网络	A-a1	B-b1	B-b2	a3连入的网络-a3
第一次	开					
第二次	开					
第三次	开					
第四次	开					
第五次	开					
第六次	关					
第七次	关					
第八次	关					
第九次	关					
第十次	关					
从上述实验可以得出结论：


其次是网络之间的串扰情况。
实验一如下图，其中A、B为相邻两个教室内的协调器节点。
 
实验结果如下表。
实验	门	a1a2连入的网络	B-b1	B-b2	连入的网络-a1	连入的网络-a2
第一次	开					
第二次	开					
第三次	开					
第四次	开					
第五次	开					
第六次	关					
第七次	关					
第八次	关					
第九次	关					
第十次	关					
实验二如下图，其中A、B为相对两个教室内的协调器节点。
 
实验结果如下表。
实验	门	a1a2连入的网络	B-b1	B-b2	连入的网络-a1	连入的网络-a2
第一次	开					
第二次	开					
第三次	开					
第四次	开					
第五次	开					
第六次	关					
第七次	关					
第八次	关					
第九次	关					
第十次	关					
从上述实验可以得出结论：







4.1 Z-Stack协议中的网络标识符及其冲突机制
4.1.1 网络标识符PAN ID
在讨论串扰问题之前，我们需要了解在Z-Stack协议栈中简化功能设备（RFD，路由节点和终端设备节点）是怎样判断加入哪一个全功能设备（FFD，协调器节点）搭建的网络的？2.1.2节中曾经说过，协调器是一个ZigBee网络的“开始”。他上线之后会选择一个信道和一个网络标识符（PAN ID，Personal Area Network ID）然后等待其他设备加入这个网络。所以在在Z-Stack协议栈中，当一个烧入协调器功能代码的节点开机后，在初始化函数中明确自己是协调器节点时，它将为自己搭建的网络选择一个PAN ID。选择方式有两种，在Z-Stack协议栈中有一个参数ZDAPP_CONFIG_PAN_ID（在f8wConfig.cfg文件中可以看到，或者可以通过读取_NIB.nwkPanId显示），当这个参数被定义为0xFFFF时，那么协调器将在启动后为自己搭建的网络随机建立一个PAN ID（范围为0x0000~0x3FFF）。如果ZDAPP_CONFIG_PAN_ID这个参数没有被定义成0xFFFF，那么这个网络的PAN ID将等于ZDAPP_CONFIG_PAN_ID的值（范围为0x0000~0xFFFE）。 [4]
于是我们马上就能得出一个解决串扰问题的方法，就是每个房间的Zigbee网络都设置不同的PAN ID即可。但这个方法是否可行呢？在这里先要解释一下Zigbee工程在开发时的软件架构（如下图）。一个Project中可以有若干个Configuration（下面将翻译为配置），协议栈一般有CoordinatorEB，RouterEB和EndDeviceEB三种配置，对应着三种逻辑节点。当一个节点需要它的功能为协调器时就选中CoordinatorEB，然后将代码烧入节点中，当一个节点需要它的功能为终端设备时就选中EndDeviceEB，同样将代码烧入节点中。除此之外，可以依据终端设备节点的不同种类自定义配置，下图中就举了传感器节点（SensorEB）和继电器节点（RelayEB）的例子。在一个Zigbee工程中，一般情况下，不同的配置只有APL层的代码是不同的，他们将共享PHY层、MAC层和NWK层的代码，也就是说定义于NWK层的参数PAN ID也是共享的。也正是因为这样的共享，当用户自定义一个明确的PAN ID（假设为0x1234）时， RFD（简化功能设备）才能根据自身代码里的0x1234加入到FFD（全功能设备）搭建的、标识为0x1234的网络中。这是针对定义了一个明确的PAN ID，如果是随机定义呢？当PAN ID的选择为随机方式时，设备就将建立或加入一个“最优”的网络，也就是说RFD将选取一个信号最好的FFD并加入他的网络，这也是为什么担心会出现串扰的原因，当A协调器脱离网络后，对于a1和a2节点来说，“最优”的网络就从网络A变成了隔壁的网络B。
 
因此，当我们要为每一个教室都设置单独的网络标识符时，意味着不同教室的协调器代码都是不一样的，不同教室的传感器节点代码都是不一样的，这样在烧写时就无法大批量的烧写，这对于操作性来说是一个很大的问题。
4.1.2 Z-Stack中的非易失性存储器（NV，Non Volatile）
在Z-Stack协议栈中，NV存储器主要用于保存网络的配置参数（如网络地址），因为掉电后该参数不丢失，所以，当节点因为电池没电等原因断电后重新加入网络时，该节点还是加入原来的网络。 [5]
所以，我们所担心出现的终端节点串扰问题是不存在于断电重启这种情况下的，它只存在于节点不是断点而是损坏后，重新更换节点的情况。重新更换的节点中没有保留原节点所在网络的信息，当新节点上电后它将选取“最优”网络加入，那么就不能百分百保证新节点仍然加入原节点所在的网络。
由此可以解释终端节点的串扰是如何发生的。
那么网络之间的串扰呢？
4.1.3 网络标识符冲突检测
在网络上可操作的任何设备将在下面这种情况下被认为已经检测到 PAN ID冲突：接收到的信标内的PAN ID与其自己的PAN ID匹配但包含在信标有效载荷（beacon payload）中的EPID（Extended PAN ID）数值不存在或不等于nwkExtendedPANID。 [4]
这一段话涉及几个术语：beacon payload和Extended PAN ID。
第一个术语beacon payload，从下图 [8]可以看出，beacon payload是Zigbee网络包中的一段数据。
 
第二个术语EPID，在Z-Stack协议栈中使用了两种Extended PAN ID，第一种是 zgApsUseExtendedPANID：这是一个标识着将要加入或建立的网络的64位的网络标识符，这个标识符相当于NV（非易失性存储）条目中的 ZCD_NV_APS_USE_EXT_PANID。第二种是 zgExtendedPANID: 这是一个标识已加入的网络的64位的网络标识符，如果这个标识符的值是 0x0000000000000000, 那么这个设备就没有连接入网络。这个标识符相当于NV条目中的ZCD_NV_EXTENDED_PAN_ID。
当设备启动时,它会检查zgExtendedPANID的值。如果zgExtendedPANID有一个非零值,那么这个设备将假设它拥有在一个网络中运行所需要的所有网络参数。
如果设备发现它没有连接到一个网络，那么它会检查它是否被配置成一个Zigbee协调器。如果是配置为一个协调器，那么它将构造一个网络，并且使这个网络的EPID（nwkExtendedPANID）等于zgApsUseExtendedPANID，如果zgApsUseExtendedPANID有一个非零值的话。如果zgApsUseExtendedPANID 是0x0000000000000000,那么设备将利用其64位扩展地址作为网络的Extended PAN ID来构造网络。
如果这个设备不是被配置为协调器并且zgApsUseExtendedPANID有一个非零值,那么它将尝试加入由zgApsUseExtendedPANID标识的网络。该设备将只连接这个特定的网络，如果发现该网络不可访问，则该过程将失败。如果zgApsUseExtendedPANID = 0x0000000000000000，那么这个设备将加入“最好”的可用的网络。 [4]
一般情况下，节点的zgApsUseExtendedPANID都会设置为0，对于协调器来说，在它构造网络的时候就会将自己的64位IEEE地址作为这个网络的扩展网络标识符，而对于其他节点来说，zgApsUseExtendedPANID = 0意味着当它没有连接到一个网络时，它将加入“最优”的网络
由此可以解释网络之间串扰是如何发生的。
4.1.3 Z-Stack如何解决冲突
Z-Stack 2007版本引入了一个叫网络管理节点的概念，可以通过添加、宏NWK_MANAGER，来激活网络管理节点。
需要注意的是网络管理节点只能是协调器或者路由器，终端节点不适合作为网络管理节点；一个网络只能存在一个网络管理节点，如果同时有多个网络管理节点，会导致网络管理的混乱。 [9]
当网络管理节点检测到网络标识符冲突时，它将发布网络报告和更新命令。
当执行网络报告命令时，网络管理节点将为网络选择一个新的16位网络标识符。新的网络标识符是随机生成的，但是需要执行一项检查来确认新的网络标识符并不在网络报告命令的报告信息中。
一旦一个新的网络标识符被选择了，网络管理节点先修改nwkUpdateID参数，然后构建一个网络标识符更新的网络更新命令，更新信息被设置为新网络标识符的值。他广播这个命令之后，网络管理节点将在一段时间后改变他的网络标识符为新的那一个。
当从网络管理节点处接收到构建一个网络标识符更新的Network Report命令时，在同一网络中的设备在一段时间后将改变他的网络标识符为包含在更新信息中的值。他也会把这个新接收到的网络标识符存储到nwkUpdateID和beacon payload中。 [4]
由TI的开发指导手册可以得知，Z-Stack对于网络标识符的冲突检测机制可以说只针对协调器第一次搭建网络的时候，当它发现周边有与自己的网络标识符相同的网络发来信标，但是信标内的EPID是另外一个网络的协调器MAC地址，于是它就更换自己的网络标识符，并通知所有网络内的节点更新网络标识符。
这种机制对于本章研究的问题——当协调器A脱离网络，a1和a2成为孤儿节点后以新节点身份重新加入B网络的情况是没有帮助的，当a1和a2成为孤儿节点后它们的EPID将被清零，就谈不上检测出网络标识符冲突了。
4.2在顶层开发中寻求解决
既然两种串扰都有可能发生，但是Z-Stack本身并没有处理这样问题的机制，那么就需要在软件开发的过程中进行解决。
对于一个拥有完备协议栈的协议，最便捷的方法就是在APL层（应用层）内解决问题。更何况，尽管Z-Stack的开源程度已经很大了，但它并不是完全开源，若是贸然改动协议栈的内容很难说会不会因为一些不可见的原因导致程序出错。
所以解决串扰问题，首先得考虑是在顶层开发中寻求解决，即运用协议栈已经实现的功能解决串扰。 
4.2.1 安装过程中修改PAN ID
对于网络之间的串扰问题，设想一个通过修改PANID的方式来解决：考虑到一个教室有一个网络，那么可以让网络标识符的值等于教室的名称，因为教室的名称是不重复的，所以网络标识符也不会重复。以我们学校的教学楼为例，分为仙一择善楼，仙二思源楼和逸夫楼，那么仙一106教室就可以用1106（换算成16进制为0x0452）表示，逸夫楼A区309教室就可以用3309（换算成16进制为0x0CED）表示，明确的网络标识符范围为0~0xFFFE，即可以标识65534个教室，按照刚刚的命名方式，相信是绰绰有余的。
具体的操作流程如下：
 
通过这样的方法，每一个协调器的PANID对于管理员来说是可知的，当一个新节点要替换原节点加入网络时，只需要手动修改新节点的PAN ID就能确保新节点加入我们希望他加入的网络。
因为要想这个系统便于维护，就需要精确获知每一个教室每一个节点的工作情况，所以在安装时为网关命名是必要的一步操作。想要实现手动修改新节点的网络标识符，只需要在硬件上为节点加上一个连接小键盘的插口，操作起来比较简单。
可以说，通过将网络标识符的值等于教室名这一方法可以有效的解决终端节点的串扰问题。但是对于网络间的串扰问题，这样的方法并没有解决问题。当A脱离网络后，a1和a2将自发的加入网络B，此时a1和a2非易失性存储器中的PAN ID将变成教室B的教室名。即使A协调器重新上电或者更换节点后，a1和a2也不会退出B网络加入A网络的。所以，我们希望当A节点脱离网络时，a1和a2不加入其他网络，等待PAN ID为A教室名的网络重新建立。如何做到这一点？我们想到了4.1.3节中提到的ExtendPANID。
4.2.2 ExtendPANID
EPID中的zgApsUseExtendedPANID可以当协调器脱离网络时让节点不加入其他的网络，但这只存在于zgApsUseExtendedPANID不等于0的情况，这种方法的可操作性不高。那是否可以一开始使zgApsUseExtendedPANID为0（网络的EPID将默认为协调器的IEEE地址），然后当网络稳定后修改zgApsUseExtendedPANID的值为一个非零值呢？ 
先不考虑zgApsUseExtendedPANID的值能否在程序运行过程中操作（底层参数在顶层是否可写），如果修改，修改为什么值呢？修改为A节点的IEEE地址是不行的，因为不能应对A节点损坏的情况。一种想法是将教室名从16位通过补“0”扩展到64位，这的确能解决A节点掉电或后重启的问题，但是对于A节点损坏的情况需要网关的配合。网关在协调器上电后需要记录这个协调器的IEEE地址，当又有协调器上电时，网关需要比较这次的协调器和上次的是否是同一个，如果不是（即A是因为损坏），那么则需要直接将它的EPID改为扩展后的教室名，而不是像第一个协调器那样初始的EPID为0。
可以说，理论上在运行过程中通过网关的配合修改EPID的值是可以解决的，但是很遗憾的是我并没有找到在上层操作EPID的接口。也许是有我不知道的方式，也许就是协议栈不支持，但是单纯的从顶层开发层面并不能很好的解决网络间的串扰，所以退而求其次，通过底层协议来寻求解决。
4.3 对协议进行优化
从4.1.3节的图中可以看出，Zigbee协议在进行无线传输时是通过IP包为单位的，接收端收到的消息结构如下图：
 
其中最后一个afMSGCommandFormat_t的结构体类型的参数cmd中包含了发送的消息内容，其结构如下：
 
其中的无符号字符型指针Data就是发送方发送的数据。
可以看出，在一个IP包中，除了数据，还有许许多多的参数，那么在这些参数的基础上是否可以在增加一个参数为节点所在的房间号呢？这样的话，当A节点脱离网络后，a1和a2将会广播入网请求，而入网请求的IP包中将包含着A教室的教室名，这时B节点就会拒绝a1和a2的入网请求，从而达到阻止网络之间串扰的目的。而当A教室的新协调器构建好标识符为教室名的网络后，a1和a2将会重新连入A网络中。
想要实现上述过程，还需要使a1和a2不断广播入网请求，而不是被B拒绝后不再申请入网。
Z-Stack 2007协议规范是这样规定入网请求的： [10]
 
若要实现这一过程，需要在          中进行修改。
4.4 本章小结

 
结  论
实验表明，倡导“快心遂意，价值共享”的快论文平台是一个界面简洁、功能强大、操作便捷的毕业论文排版和编辑系统，一方面，构建了一个专为论文写作而订制的编辑平台，提供丰富的写作辅助功能，如论文基本架构、文献插入辅助、各章内容提示、在线申请指导等；另一方面，平台凭借独家首创的论文在线生成技术提供一键排版功能，与360的一键杀毒、一键提速如出一辙，将复杂的格式设置整合到一起，一键完成排版，将学生从繁琐的格式编辑中解放出来，将有限的时间集中用于最有价值的内容创作上，提高论文写作效率，同时提升论文质量。作为一个Web端的功能性系统，这种网页与功能工具相结合的形式随着网络的普及和服务器技术的完善以及服务器运算性能的增强必定会成为主流的开发形式。
 
致谢
能够加入到智能教室系统项目的开发中, 成为开发小组中的一员，我感到非常幸运。本设计的完成和对协议的深入研究学习优化是在我的指导老师张志俭老师的细心指导下进行的。是老师对于系统功能的新颖想法和细致要求才使得我在实现系统的过程中从各个角度思考问题，查漏补缺，锻炼了我的逻辑思维和解决问题的能力。从设计的选题到资料的搜集直至最后设计的修改的整个过程中，花费了张老师很多的宝贵时间和精力，在此向老师表示衷心地感谢!导师严谨的开发态度，开拓进取的精神和高度的责任心都将使我受益终生。
在项目开发过程中一边是老师的悉心指导, 一边是与小组成员之间的讨论与理解, 几个月下来大大提高了自己业务和技术两方面的技能, 已经能够比较熟练的掌握基本的工作方法和一些技巧, 而且能够独立完成一些模块的开发。通过实践, 我解决实际问题的能力得到了很好的锻炼。在实际的开发工作中也遇到了很多的以前没有遇到过的新技术, 面对技术难题我总是直接面对, 没有逃避, 也因此自学了好多新的技术, 大大提高了自己的自学能力, 也加深了对自己工作要负责的信念。
在这个温馨的开发团队中, 我加强了自己的团结精神和集体感,通过这个项目不仅学习到了很多技术，也了解了整个项目的大体流程, 从需求分析、数据库设计、详细设计、代码编写、测试、项目维护等方面, 使自己不仅从一个代码编写人员的角度还从一个整体的角度来看整个项目开发, 加深了软件开发概念的理解。
在这里，我还要感谢和我同一设计小组的几位同学，是你们在我平时设计中和我一起探讨问题，并指出我设计上的误区，使我能及时的发现问题把设计顺利的进行下去，没有你们的帮助我不可能这样顺利地结稿，在此表示深深的谢意。
 
书目

[1] 	刘锦，顾加强, “我国物联网现状及发展策略,” 《企业经济》, pp. 114-117, 4 2013. 
[2] 	张小威, “Zigbee电路设计及在智能家居中的应用,” 2013.
[3] 	丁皓, “Zigbee技术在生产管理系统中的应用,” 2013.
[4] 	Texas Instruments, Inc., “Z-Stack Developer’s Guide”.
[5] 	王小强，欧阳骏，黄宁淋, Zigbee无线传感器网络设计与实现, 化学工业出版社. 
[6] 	李青松, “基于Zigbee 的楼宇多节点网络控制系统,” 2010.
[7] 	姚春, “Zigbee 在大数量节点应用中的问题研究,” 《微计算机信息》, 2009. 
[8] 	bamboogz99, “zigbee协议及开发（3）- 基础知识 - 一心两用 - 博客频道 - CSDN.NET,” 2011. [联机]. Available: http://blog.csdn.net/bennyfun79/article/details/6903956.
[9] 	xiaoshengyige, “zigbee学习笔记-----zstack中发现PANID冲突的解决办法。-xiaoshengyige的专栏-博客频道-CSDN.NET,” [联机]. Available: http://blog.csdn.net/xiaoshengyige/article/details/7577123.



